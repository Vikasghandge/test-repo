first of all you you need 3 servers.
1] server ----> master server
2] server ----> node-01
3] server ----> node-02

in the master server you need 
1] grafana
2] prometheus
3] ansible
 and other node server 
 1] node-exporter
 2] node-exporter
    
 __________________________________________________________________________________   
__________________________________________________________________________________
setup master server ----> master_server
take ssh ok master server
sudo apt-get update
first we need to  install ansible on our server.
sudo vim install_ansible.sh
-----------------------------------------------------------------------------------
!#bin/bash
sudo apt-get update -y
sudo apt install software-properties-common -y
sudo apt-add-repository ppa:ansible/ansible
sudo apt update -y
# sudo apt install ansible -y
sudo apt install ansible-core
sudo chmod +x install_ansible.sh
./install_asnible.sh
____________________________________________________________________________________
we need to create ssh key for your node servers directs access
ssh-keygen
cat /home/ubuntu/.ssh/id_rsa.pub
copy that key and paste this key into your node servers authrourized keys
path for authroized keys 
cd .ssh 
sudo vim authroized keys
paste the the ssh key here which you have created in master server
paste the key as it is another node server.
now we need to config our node servers ip into your master-server
copy both node server ip
in the master server 
cd /etc/ansible/
sudo vim hosts
paster your node server ip here 
ex.   [ubuntuserver]
  
node-01 ansible_host=<your node-01 server ip>
node-02 ansible_host=<your node-02 server ip>
check one this syntax on chatgtp.
once check are you able to take ssh your node servers or not
ssh <node-server_ip>
ansible -m ping all.
confirm ping pong
if you want more about ansible setup and how to create ansible playbook
then ---- ansible_play-book_cinfig-steps
ansible-playbook-vs-code-guide check this files
______________________________________________________________________________________
now we have sucessfully did setup our ansible and node servers now we need to setup 
grafana promethueus and node_exporter
first of all take ssh of your node servers
sudo apt-get update
sudo vim install_node_exporter.sh
--------------------------------------------------------------------------------------
#!/bin/bash

# Variables
NODE_EXPORTER_VERSION="1.6.1"  # Update to the latest version as needed
NODE_EXPORTER_TAR="node_exporter-${NODE_EXPORTER_VERSION}.linux-amd64.tar.gz"
DOWNLOAD_URL="https://github.com/prometheus/node_exporter/releases/download/v${NODE_EXPORTER_VERSION}/${NODE_EXPORTER_TAR}"
INSTALL_DIR="/usr/local/bin"
SERVICE_FILE="/etc/systemd/system/node_exporter.service"

# Update and install dependencies
echo "Updating system and installing dependencies..."
sudo apt-get update
sudo apt-get install -y wget tar

# Download Node Exporter
echo "Downloading Node Exporter version ${NODE_EXPORTER_VERSION}..."
wget "${DOWNLOAD_URL}" -O /tmp/${NODE_EXPORTER_TAR}

# Extract the tarball
echo "Extracting Node Exporter..."
sudo tar xvf /tmp/${NODE_EXPORTER_TAR} -C /tmp

# Move binaries to the installation directory
echo "Installing Node Exporter binaries..."
sudo mv /tmp/node_exporter-${NODE_EXPORTER_VERSION}.linux-amd64/node_exporter ${INSTALL_DIR}

# Clean up
echo "Cleaning up..."
rm -rf /tmp/node_exporter-${NODE_EXPORTER_VERSION}.linux-amd64
rm /tmp/${NODE_EXPORTER_TAR}

# Create Node Exporter user
echo "Creating Node Exporter user..."
sudo useradd --no-create-home --shell /bin/false node_exporter

# Create systemd service file
echo "Creating Node Exporter service file..."
cat <<EOL | sudo tee ${SERVICE_FILE}
[Unit]
Description=Node Exporter
After=network.target

[Service]
User=node_exporter
ExecStart=${INSTALL_DIR}/node_exporter

[Install]
WantedBy=multi-user.target
EOL

# Set ownership and reload systemd
echo "Setting ownership and reloading systemd..."
sudo chown node_exporter:node_exporter ${SERVICE_FILE}
sudo systemctl daemon-reload
sudo systemctl enable node_exporter
sudo systemctl start node_exporter

# Print status
echo "Node Exporter installation completed. Checking status..."
sudo systemctl status node_exporter
--------------------------------------------------------------------------------------chmod +x install_node_exporter.sh ----> adding execution permission
./install_node_exporter.sh  -----> running node exporter
check node_exporter --version
______________________________________________________________________________________
you can try it through master server
create one yml file
ex.   node_install.yml
---
- name: Install Node Exporter
  hosts: all
  become: yes
  vars:
    node_exporter_version: "1.6.1"
    node_exporter_tar: "node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    download_url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/{{ node_exporter_tar }}"
    install_dir: "/usr/local/bin"
    service_file: "/etc/systemd/system/node_exporter.service"

  tasks:
    - name: Update and install dependencies
      apt:
        update_cache: yes
        name:
          - wget
          - tar
        state: present

    - name: Download Node Exporter
      get_url:
        url: "{{ download_url }}"
        dest: "/tmp/{{ node_exporter_tar }}"

    - name: Extract Node Exporter tarball
      unarchive:
        src: "/tmp/{{ node_exporter_tar }}"
        dest: "/tmp/"
        remote_src: yes

    - name: Move Node Exporter binary to installation directory
      command: mv /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter {{ install_dir }}

    - name: Clean up
      file:
        path: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64"
        state: absent

    - name: Remove tarball
      file:
        path: "/tmp/{{ node_exporter_tar }}"
        state: absent

    - name: Create Node Exporter user
      user:
        name: node_exporter
        shell: /bin/false
        system: yes

    - name: Create Node Exporter systemd service file
      copy:
        dest: "{{ service_file }}"
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          User=node_exporter
          ExecStart={{ install_dir }}/node_exporter

          [Install]
          WantedBy=multi-user.target

    - name: Set ownership of service file
      file:
        path: "{{ service_file }}"
        owner: node_exporter
        group: node_exporter

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Enable and start Node Exporter service
      systemd:
        name: node_exporter
        enabled: yes
        state: started

    - name: Check Node Exporter service status
      systemd:
        name: node_exporter
        state: status
---------------------------------------------------------------------------------
paste the contain and pull this play book on your server and run it.
ex. ansible-playbook <your play booke name> node_install.yml
______________________________________________________________________________________
now we have sucessfully installed node_expo in your node servers now we need to setuo
grafana and prometheus on your master-servers
___________________________________________________________________________________
take ssh of master server
first install prometheus
sudo apt-get update
sudo vim install_prometehus.sh

#!/bin/bash

# Variables
PROMETHEUS_VERSION="2.42.0"  # Update to the latest version as needed
PROMETHEUS_TAR="prometheus-${PROMETHEUS_VERSION}.linux-amd64.tar.gz"
DOWNLOAD_URL="https://github.com/prometheus/prometheus/releases/download/v${PROMETHEUS_VERSION}/${PROMETHEUS_TAR}"
INSTALL_DIR="/usr/local/bin"
SERVICE_FILE="/etc/systemd/system/prometheus.service"

# Update and install dependencies
echo "Updating system and installing dependencies..."
sudo apt-get update
sudo apt-get install -y wget tar

# Download Prometheus
echo "Downloading Prometheus version ${PROMETHEUS_VERSION}..."
wget "${DOWNLOAD_URL}" -O /tmp/${PROMETHEUS_TAR}

# Extract the tarball
echo "Extracting Prometheus..."
sudo tar xvf /tmp/${PROMETHEUS_TAR} -C /tmp

# Move binaries to the installation directory
echo "Installing Prometheus binaries..."
sudo mv /tmp/prometheus-${PROMETHEUS_VERSION}.linux-amd64/prometheus ${INSTALL_DIR}
sudo mv /tmp/prometheus-${PROMETHEUS_VERSION}.linux-amd64/promtool ${INSTALL_DIR}

# Clean up
echo "Cleaning up..."
rm -rf /tmp/prometheus-${PROMETHEUS_VERSION}.linux-amd64
rm /tmp/${PROMETHEUS_TAR}

# Create Prometheus user
echo "Creating Prometheus user..."
sudo useradd --no-create-home --shell /bin/false prometheus

# Create necessary directories
echo "Creating directories..."
sudo mkdir -p /etc/prometheus
sudo mkdir -p /var/lib/prometheus
sudo chown prometheus:prometheus /var/lib/prometheus

# Create Prometheus configuration file
echo "Creating Prometheus configuration file..."
cat <<EOL | sudo tee /etc/prometheus/prometheus.yml
global:
  scrape_interval: 15s

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
EOL

sudo chown prometheus:prometheus /etc/prometheus/prometheus.yml

# Create Prometheus systemd service
echo "Creating Prometheus service file..."
cat <<EOL | sudo tee ${SERVICE_FILE}
[Unit]
Description=Prometheus Monitoring System
Documentation=https://prometheus.io/docs/introduction/overview/
After=network.target

[Service]
User=prometheus
Group=prometheus
ExecStart=${INSTALL_DIR}/prometheus \
  --config.file=/etc/prometheus/prometheus.yml \
  --storage.tsdb.path=/var/lib/prometheus/ \
  --web.console.templates=/usr/share/prometheus/consoles \
  --web.console.libraries=/usr/share/prometheus/console_libraries

[Install]
WantedBy=multi-user.target
EOL

# Set ownership and reload systemd
echo "Setting ownership and reloading systemd..."
sudo chown prometheus:prometheus ${SERVICE_FILE}
sudo systemctl daemon-reload
sudo systemctl enable prometheus
sudo systemctl start prometheus

# Print status
echo "Prometheus installation completed. Checking status..."
sudo systemctl status prometheus
---------------------------------------------------------------------------------
sudo chmod +x install_prometheus.sh ---> adding execution permission
./install_prometheus.sh  -----> run 
prometehus setup done now setup grafana.
__________________________________________________________________________________

sudo apt-get update
sudo vim install_grafana.sh

#!/bin/bash

# Update and install necessary packages
sudo apt-get update
sudo apt-get install -y wget apt-transport-https software-properties-common

# Install Grafana
echo "Installing Grafana..."

# Add Grafana APT repository
sudo apt-get install -y software-properties-common
sudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"
wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -

# Update package list and install Grafana
sudo apt-get update
sudo apt-get install -y grafana

# Start and enable Grafana service
echo "Starting Grafana..."
sudo systemctl start grafana-server
sudo systemctl enable grafana-server

# Verify that Grafana is running
if sudo systemctl is-active --quiet grafana-server; then
    echo "Grafana is running successfully."
else
    echo "Failed to start Grafana. Checking status and logs..."
    sudo systemctl status grafana-server
    sudo journalctl -u grafana-server --since "10 minutes ago"
fi

# Check if Grafana is listening on port 3000
if sudo netstat -tuln | grep -q 3000; then
    echo "Grafana is listening on port 3000."
else
    echo "Grafana is not listening on port 3000. Please check the service status and logs."
fi
----------------------------------------------------------------------------------
sudo chmod +x install_grafana.sh  ---> adding execution permission
./install_grafana.sh  --> run grafana
____________________________________________________________________________________

verify through ip on google is it woring or not
for node_exporter <your node server ip>:9100 
ex. 192.165.0.0:9100  ---> verify
for grafana <your grafana server ip>:3000 
ex. 10.0.0.0:3000 ---> verify
for promethues <your prometheus ip>:9090
ex. 10.0.0.1:9090

grafana run of port ----> 3000
node_expo on ----> 9100
prometheus ----> 9090
____________________________________________________________________________________
now need to add ip in prometheus
cd /etc/prometheus
sudo vim 








